//Robbie Henderson - H00011358
//working with Jonathan Menzies

For part 3 I used the program from 1.3 but added 
pthread_barrier_wait
to cause a halt in the execution to wait for other threads to catch up

I used the default N_THREADS = 16

With this value of N_THREADS
all numbers of threads bellow 16, halted and seemed to wait forever
all numbers of threads above 16 halted and seemed to wait forever
the only number of threads to run through was exactly 16
which took far longer than any eample without the barrier syncronization

This makes me think it was not implemented correctly,
however I beleive that the correct implementation should halt and allow 
the threads to synchronize and finish execution at a specific point
If executed correctly this should avoid the problem seen in 1.3 where large
numbers of threads caused an increase in runtime.  
